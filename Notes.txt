STARTUP
cat /proc/sys/kernel/threads-max
/usr/lib/coppelia_sim_edu/coppeliaSim.sh -j 20000
cd /mnt/c/Users/Lukas/OneDrive/UIR/T1a-ctrl/
start simulation in coppelia
python3 t1x_dstar.py (na windows python .\t3c_map.py)

SECOND PART
cd /mnt/c/Users/Lukas/OneDrive/UIR/T2a-tspn/
python3 t2a_tspn.py

SEMESTER PROJECT
cd /mnt/c/Users/Lukas/OneDrive/UIR/Semester_Project/
clear & python3.8 Explorer.py -j 10000 -m pretty_errors
cd /mnt/c/Users/Lukas/OneDrive/UIR/ && git add .

week1 - goto - used in trajectory following - hexapod_controller
week2 - goto_reactive - used in trajectory following - hexapod_controller
week3 - fuse_laser_scan - used in mapping - hexapod_explorer
week4 - grow_obstacles + plan_path + simplify - planning - hexapod_explorer
week5 - Dstar - useless
week6 - frontier detection - planning find_free_edge_frontiers - hexapodexplorer
week7
week8
week9
week10
week11
week12
week13

Working in files
-Explorer.py
-HexapodExplorer.py
-HexapodController.py
-HexapodRobot.py
-HexapodRobotConst.py

REPORT
-udelat dokumentace
-vypsat poznamky
-napsat ktere metody jsme splnili

TODO
-loopuje se bresenham line
-pridat ze robot resi pouze cesty kde prvn ibod je pred nim
-zmenit sleep 0.3
-novy setup prekazek aby byla videt dynamicka alokace mapy
-stop pohyb kdyz hleda nove frontiery
-jakmile to nekolik iteraci po sobe nenajde novou cestu, vypnout

SEMESTER PROJECTS NOTES
-v copelii nejlip funguje very fast + ODE +100ms, ale muze byt nahodou...
-zmena, ze dokud to nedojde ke stanovenemu frontierovi, nespusti seenovy trajectory_planning a novy frontier lookup
---jinak se to porad toci dokolecka...
-musíme vskutku grow_obstacles jen real obstacles
-nepoužívá dubbin vozítko, takže otočky jsou trochu složité - nutno stale prepocitavat path
-u path_simple nedavame start, at to rovnou jde a netoci se na miste (lze resit skalarnim soucin bodu a orientace robota)
-red cross kam jdeme
-green cross goal
-pri kolizi se zrusi goto
-vypnute dubins vozitko, toci se na miste
-kmeans minimalizuji ctvercovy rozdil na hledani rozdílů
-f3
	-kolem kazdeho frontieru kruznice dle vzdalenosti senzoru
	-zjsitime entropii, nejlepsi hodnota v 0.5
	-pak vybereme frontier ktery ma nejvetsi sumu
	-jakmile je bod daleko/blizko/za prekazkou, tak to neuvazujeme
-pridana metoda stop
-pro grow obstacles v ramci a_star pridan extra margin, at se nestane, ze pri objeveni nove hrany "za rohem" musime prepocitat celou cestu znovu kvuli kolizi (taky se stalo, ze za rohem vybafla hrana, robot zustal v prekazce, a vsechno ohlasoval za unreachable)
-vysvetlit ze neupdatuju
-p2 lehce upraveno: zkousim postupne hledat cestu od nejlepsiho po nejhorsi, srovnavat to a hledat toho nejblizsiho je hrozne neprehle a znacne to komplikuje, je to udelane v historii na githubu, ale pro prehlednost prepsano

TROUBLESHOOTING
-neigbors error: restart simulation
-lag pri hledani frontierů: nutny restart, nejaky brouk kteremu nemohu prijit na kloub, nestava se casto
-grid_map.data[y + j, x + i] switched y and x axes, be careful
-vypisovani No new path without collision na zacatku - robot sklouzne do unknown oblasti a nejde najit cestu

IMPROVEMENTS NAD RAMEC ZADANI
-automaticke ukonceni programu
-lepsi plotovani
-timovany a srozumitelny debug na obrazovce
-vygenerovana dokumentace funkcí? (#todo)
-pridani metody k zastaveni robota


NAPADY NA ZLEPSENI
-neni prilis optimalozovazne
-napriklad tvorba 3 map je narocna, stacily by dve
-lze urcite refactorovat kod pro zrychleni
-nyni vsechny vypocty az kdyz robot dojde do finalniho frontieru, slo by pocitat v průběhu
-mozny vyskyt chyby kdyz srartujeme s robotem blizko prekazky, ze robot "naroste" do prekazky a tudiz neexistuje cesta pomoci astar

ZIP IT
cd hexapod_explorer && zip HexapodExplorer HexapodExplorer.py && cd ..
cd data_collection && zip SOMSolver SOMSolver.py && cd ..
cd data_collection && zip DTSPNSolver DTSPNSolver.py && cd ..
cd samplingplanner && zip PRMPlanner PRMPlanner.py && cd ..
cd samplingplanner && zip RRTPlanner RRTPlanner.py && cd ..

BLACK SCREEN BUG
-export LIBGL_ALWAYS_INDIRECT=0 (bezne bylo 1)
-export LIBGL_ALWAYS_SOFTWARE=1
-nepocita to na gui, shori mi procesor